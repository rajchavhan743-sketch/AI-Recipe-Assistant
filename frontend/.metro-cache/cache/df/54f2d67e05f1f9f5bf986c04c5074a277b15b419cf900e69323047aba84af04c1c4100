{"dependencies":[{"name":"expo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"PWvtvXU7MaET6Yd1Gn8oQOXJQ8A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ExpoSpeechRecognitionModule = void 0;\n  var _expo = require(_dependencyMap[0], \"expo\");\n  let _speechRecognitionRef = null;\n  // It loads the native module object from the JSI or falls back to\n  // the bridge module (from NativeModulesProxy) if the remote debugger is on.\n  class ExpoSpeechRecognitionModuleWeb extends _expo.NativeModule {\n    _clientListeners = new Map();\n    _nativeListeners = new Map();\n    // Convert the web event to the native event\n    bindEventListener = (eventName, ev) => {\n      const eventPayload = webToNativeEventMap[eventName]?.(ev);\n      this.emit(eventName,\n      // @ts-expect-error payload typings are incorrect\n      eventPayload);\n    };\n    addListener(eventName, listener) {\n      // Convert the web event to the native event\n      // @ts-expect-error Not all events are covered here\n      const nativeListener = ev => {\n        const handler = eventName in webToNativeEventMap ? webToNativeEventMap[eventName] : null;\n        // @ts-expect-error payload typings are incorrect\n        const eventPayload = handler?.(ev);\n        // @ts-expect-error\n        listener(eventPayload);\n      };\n      // @ts-expect-error\n      _speechRecognitionRef?.addEventListener(eventName, nativeListener);\n      if (!this._nativeListeners.has(eventName)) {\n        this._nativeListeners.set(eventName, new Set());\n      }\n      // Add the original listener to the enhanced listeners\n      // @ts-expect-error\n      this._nativeListeners.get(eventName)?.add(nativeListener);\n      // Map the original listener to the enhanced listener\n      // @ts-expect-error\n      this._clientListeners.set(listener, nativeListener);\n      const handle = super.addListener(eventName, listener);\n      return {\n        remove: () => {\n          // @ts-expect-error\n          this._nativeListeners.get(eventName)?.delete(nativeListener);\n          this._clientListeners.delete(listener);\n          handle.remove();\n        }\n      };\n    }\n    removeAllListeners(eventName) {\n      // Go through _listeners and remove all listeners for this event\n      if (this._nativeListeners.has(eventName)) {\n        const nativeListeners = this._nativeListeners.get(eventName);\n        if (!nativeListeners) {\n          return;\n        }\n        // Remove the enhanced listeners\n        for (const [listener, nativeListener] of this._clientListeners) {\n          // if nativeListener in listeners, remove it\n          if (nativeListeners.has(nativeListener)) {\n            // Remove the enhanced listener\n            this.removeListener(eventName, listener);\n          }\n        }\n        // ...and the native listeners\n        for (const listener of nativeListeners) {\n          // @ts-expect-error\n          this.removeListener(eventName, listener);\n        }\n        // Clean up\n        this._nativeListeners.delete(eventName);\n      }\n    }\n    start(options) {\n      const SpeechRecognitionClass = typeof webkitSpeechRecognition !== \"undefined\" ? webkitSpeechRecognition : SpeechRecognition;\n      _speechRecognitionRef = new SpeechRecognitionClass();\n      _speechRecognitionRef.lang = options.lang ?? \"en-US\";\n      _speechRecognitionRef.interimResults = options.interimResults ?? false;\n      _speechRecognitionRef.maxAlternatives = options.maxAlternatives ?? 1;\n      _speechRecognitionRef.continuous = options.continuous ?? false;\n      // Re-subscribe to events so that we don't lose them\n      // This covers the case where the user has already subscribed to an event prior to calling `start()`\n      this._nativeListeners.forEach((listeners, eventName) => {\n        for (const listener of listeners) {\n          // May already be subscribed\n          _speechRecognitionRef?.removeEventListener(eventName, listener);\n          _speechRecognitionRef?.addEventListener(eventName, listener);\n        }\n      });\n      // Start the speech recognition!\n      _speechRecognitionRef.start();\n    }\n    getStateAsync() {\n      console.warn(\"getStateAsync is not supported on web. Returning 'inactive'.\");\n      return Promise.resolve(\"inactive\");\n    }\n    stop() {\n      _speechRecognitionRef?.stop();\n    }\n    abort() {\n      _speechRecognitionRef?.abort();\n    }\n    requestPermissionsAsync() {\n      console.warn(\"requestPermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    getPermissionsAsync() {\n      console.warn(\"getPermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    getMicrophonePermissionsAsync() {\n      console.warn(\"getMicrophonePermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    requestMicrophonePermissionsAsync() {\n      console.warn(\"requestMicrophonePermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    getSpeechRecognizerPermissionsAsync() {\n      console.warn(\"getSpeechRecognizerPermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    requestSpeechRecognizerPermissionsAsync() {\n      console.warn(\"requestSpeechRecognizerPermissionsAsync is not supported on web. Returning a granted permission response.\");\n      return Promise.resolve({\n        granted: true,\n        canAskAgain: false,\n        expires: \"never\",\n        status: \"granted\"\n      });\n    }\n    async getSupportedLocales() {\n      console.warn(\"getSupportedLocales is not supported on web. Returning an empty array.\");\n      return {\n        locales: [],\n        installedLocales: []\n      };\n    }\n    // addListener() {}\n    // removeListeners() {}\n    getSpeechRecognitionServices() {\n      return [];\n    }\n    getDefaultRecognitionService() {\n      return {\n        packageName: \"\"\n      };\n    }\n    getAssistantService() {\n      return {\n        packageName: \"\"\n      };\n    }\n    supportsOnDeviceRecognition() {\n      return false;\n    }\n    supportsRecording() {\n      return false;\n    }\n    androidTriggerOfflineModelDownload() {\n      console.warn(\"androidTriggerOfflineModelDownload is not supported on web. Returning false.\");\n      return Promise.resolve({\n        status: \"opened_dialog\",\n        message: \"Offline model download is not supported on web.\"\n      });\n    }\n    setCategoryIOS() {\n      console.warn(\"setCategoryIOS is not supported on web.\");\n    }\n    getAudioSessionCategoryAndOptionsIOS() {\n      console.warn(\"getAudioSessionCategoryAndOptionsIOS is not supported on web.\");\n      return {\n        category: \"playAndRecord\",\n        categoryOptions: [\"defaultToSpeaker\", \"allowBluetooth\"],\n        mode: \"measurement\"\n      };\n    }\n    setAudioSessionActiveIOS() {\n      console.warn(\"setAudioSessionActiveIOS is not supported on web.\");\n    }\n    isRecognitionAvailable() {\n      const hasSpeechRecognitionAPI = typeof webkitSpeechRecognition !== \"undefined\" || typeof SpeechRecognition !== \"undefined\";\n      return hasSpeechRecognitionAPI;\n    }\n  }\n  /**\n   * Convert the web SpeechRecognitionEventMap to the native event map for compatibility\n   */\n  const webToNativeEventMap = {\n    audioend: ev => ({\n      uri: null\n    }),\n    audiostart: ev => ({\n      uri: null\n    }),\n    end: ev => null,\n    error: ev => ({\n      error: ev.error,\n      message: ev.message\n    }),\n    nomatch: ev => null,\n    result: ev => {\n      const isFinal = Boolean(ev.results[ev.resultIndex]?.isFinal);\n      if (isFinal) {\n        const results = [];\n        for (let i = 0; i < ev.results[ev.resultIndex].length; i++) {\n          const result = ev.results[ev.resultIndex][i];\n          results.push({\n            transcript: result.transcript,\n            confidence: result.confidence,\n            segments: []\n          });\n        }\n        return {\n          isFinal: true,\n          results\n        };\n      }\n      // Interim results: Append to the transcript\n      let transcript = \"\";\n      const segments = [];\n      for (let i = ev.resultIndex; i < ev.results.length; i++) {\n        const resultList = ev.results[i];\n        for (let j = 0; j < resultList.length; j++) {\n          const result = resultList[j];\n          if (!result) {\n            continue;\n          }\n          segments.push({\n            confidence: result.confidence,\n            segment: result.transcript,\n            startTimeMillis: 0,\n            endTimeMillis: 0\n          });\n          if (!isFinal) {\n            transcript += result.transcript;\n          }\n        }\n      }\n      return {\n        isFinal: false,\n        results: [{\n          transcript,\n          confidence: segments.reduce((acc, curr) => acc + curr.confidence, 0) / segments.length,\n          segments\n        }]\n      };\n    },\n    soundstart: ev => null,\n    speechend: ev => null,\n    speechstart: ev => null,\n    start: ev => null,\n    soundend: ev => null\n  };\n  const ExpoSpeechRecognitionModule = exports.ExpoSpeechRecognitionModule = (0, _expo.registerWebModule)(ExpoSpeechRecognitionModuleWeb, \"ExpoSpeechRecognitionModule\");\n});","lineCount":282,"map":[[6,2,1,0],[6,6,1,0,"_expo"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,4,"_speechRecognitionRef"],[7,27,2,25],[7,30,2,28],[7,34,2,32],[8,2,3,0],[9,2,4,0],[10,2,5,0],[10,8,5,6,"ExpoSpeechRecognitionModuleWeb"],[10,38,5,36],[10,47,5,45,"NativeModule"],[10,65,5,57],[10,66,5,58],[11,4,6,4,"_clientListeners"],[11,20,6,20],[11,23,6,23],[11,27,6,27,"Map"],[11,30,6,30],[11,31,6,31],[11,32,6,32],[12,4,7,4,"_nativeListeners"],[12,20,7,20],[12,23,7,23],[12,27,7,27,"Map"],[12,30,7,30],[12,31,7,31],[12,32,7,32],[13,4,8,4],[14,4,9,4,"bindEventListener"],[14,21,9,21],[14,24,9,24,"bindEventListener"],[14,25,9,25,"eventName"],[14,34,9,34],[14,36,9,36,"ev"],[14,38,9,38],[14,43,9,43],[15,6,10,8],[15,12,10,14,"eventPayload"],[15,24,10,26],[15,27,10,29,"webToNativeEventMap"],[15,46,10,48],[15,47,10,49,"eventName"],[15,56,10,58],[15,57,10,59],[15,60,10,62,"ev"],[15,62,10,64],[15,63,10,65],[16,6,11,8],[16,10,11,12],[16,11,11,13,"emit"],[16,15,11,17],[16,16,11,18,"eventName"],[16,25,11,27],[17,6,12,8],[18,6,13,8,"eventPayload"],[18,18,13,20],[18,19,13,21],[19,4,14,4],[19,5,14,5],[20,4,15,4,"addListener"],[20,15,15,15,"addListener"],[20,16,15,16,"eventName"],[20,25,15,25],[20,27,15,27,"listener"],[20,35,15,35],[20,37,15,37],[21,6,16,8],[22,6,17,8],[23,6,18,8],[23,12,18,14,"nativeListener"],[23,26,18,28],[23,29,18,32,"ev"],[23,31,18,34],[23,35,18,39],[24,8,19,12],[24,14,19,18,"handler"],[24,21,19,25],[24,24,19,28,"eventName"],[24,33,19,37],[24,37,19,41,"webToNativeEventMap"],[24,56,19,60],[24,59,20,18,"webToNativeEventMap"],[24,78,20,37],[24,79,20,38,"eventName"],[24,88,20,47],[24,89,20,48],[24,92,21,18],[24,96,21,22],[25,8,22,12],[26,8,23,12],[26,14,23,18,"eventPayload"],[26,26,23,30],[26,29,23,33,"handler"],[26,36,23,40],[26,39,23,43,"ev"],[26,41,23,45],[26,42,23,46],[27,8,24,12],[28,8,25,12,"listener"],[28,16,25,20],[28,17,25,21,"eventPayload"],[28,29,25,33],[28,30,25,34],[29,6,26,8],[29,7,26,9],[30,6,27,8],[31,6,28,8,"_speechRecognitionRef"],[31,27,28,29],[31,29,28,31,"addEventListener"],[31,45,28,47],[31,46,28,48,"eventName"],[31,55,28,57],[31,57,28,59,"nativeListener"],[31,71,28,73],[31,72,28,74],[32,6,29,8],[32,10,29,12],[32,11,29,13],[32,15,29,17],[32,16,29,18,"_nativeListeners"],[32,32,29,34],[32,33,29,35,"has"],[32,36,29,38],[32,37,29,39,"eventName"],[32,46,29,48],[32,47,29,49],[32,49,29,51],[33,8,30,12],[33,12,30,16],[33,13,30,17,"_nativeListeners"],[33,29,30,33],[33,30,30,34,"set"],[33,33,30,37],[33,34,30,38,"eventName"],[33,43,30,47],[33,45,30,49],[33,49,30,53,"Set"],[33,52,30,56],[33,53,30,57],[33,54,30,58],[33,55,30,59],[34,6,31,8],[35,6,32,8],[36,6,33,8],[37,6,34,8],[37,10,34,12],[37,11,34,13,"_nativeListeners"],[37,27,34,29],[37,28,34,30,"get"],[37,31,34,33],[37,32,34,34,"eventName"],[37,41,34,43],[37,42,34,44],[37,44,34,46,"add"],[37,47,34,49],[37,48,34,50,"nativeListener"],[37,62,34,64],[37,63,34,65],[38,6,35,8],[39,6,36,8],[40,6,37,8],[40,10,37,12],[40,11,37,13,"_clientListeners"],[40,27,37,29],[40,28,37,30,"set"],[40,31,37,33],[40,32,37,34,"listener"],[40,40,37,42],[40,42,37,44,"nativeListener"],[40,56,37,58],[40,57,37,59],[41,6,38,8],[41,12,38,14,"handle"],[41,18,38,20],[41,21,38,23],[41,26,38,28],[41,27,38,29,"addListener"],[41,38,38,40],[41,39,38,41,"eventName"],[41,48,38,50],[41,50,38,52,"listener"],[41,58,38,60],[41,59,38,61],[42,6,39,8],[42,13,39,15],[43,8,40,12,"remove"],[43,14,40,18],[43,16,40,20,"remove"],[43,17,40,20],[43,22,40,26],[44,10,41,16],[45,10,42,16],[45,14,42,20],[45,15,42,21,"_nativeListeners"],[45,31,42,37],[45,32,42,38,"get"],[45,35,42,41],[45,36,42,42,"eventName"],[45,45,42,51],[45,46,42,52],[45,48,42,54,"delete"],[45,54,42,60],[45,55,42,61,"nativeListener"],[45,69,42,75],[45,70,42,76],[46,10,43,16],[46,14,43,20],[46,15,43,21,"_clientListeners"],[46,31,43,37],[46,32,43,38,"delete"],[46,38,43,44],[46,39,43,45,"listener"],[46,47,43,53],[46,48,43,54],[47,10,44,16,"handle"],[47,16,44,22],[47,17,44,23,"remove"],[47,23,44,29],[47,24,44,30],[47,25,44,31],[48,8,45,12],[49,6,46,8],[49,7,46,9],[50,4,47,4],[51,4,48,4,"removeAllListeners"],[51,22,48,22,"removeAllListeners"],[51,23,48,23,"eventName"],[51,32,48,32],[51,34,48,34],[52,6,49,8],[53,6,50,8],[53,10,50,12],[53,14,50,16],[53,15,50,17,"_nativeListeners"],[53,31,50,33],[53,32,50,34,"has"],[53,35,50,37],[53,36,50,38,"eventName"],[53,45,50,47],[53,46,50,48],[53,48,50,50],[54,8,51,12],[54,14,51,18,"nativeListeners"],[54,29,51,33],[54,32,51,36],[54,36,51,40],[54,37,51,41,"_nativeListeners"],[54,53,51,57],[54,54,51,58,"get"],[54,57,51,61],[54,58,51,62,"eventName"],[54,67,51,71],[54,68,51,72],[55,8,52,12],[55,12,52,16],[55,13,52,17,"nativeListeners"],[55,28,52,32],[55,30,52,34],[56,10,53,16],[57,8,54,12],[58,8,55,12],[59,8,56,12],[59,13,56,17],[59,19,56,23],[59,20,56,24,"listener"],[59,28,56,32],[59,30,56,34,"nativeListener"],[59,44,56,48],[59,45,56,49],[59,49,56,53],[59,53,56,57],[59,54,56,58,"_clientListeners"],[59,70,56,74],[59,72,56,76],[60,10,57,16],[61,10,58,16],[61,14,58,20,"nativeListeners"],[61,29,58,35],[61,30,58,36,"has"],[61,33,58,39],[61,34,58,40,"nativeListener"],[61,48,58,54],[61,49,58,55],[61,51,58,57],[62,12,59,20],[63,12,60,20],[63,16,60,24],[63,17,60,25,"removeListener"],[63,31,60,39],[63,32,60,40,"eventName"],[63,41,60,49],[63,43,60,51,"listener"],[63,51,60,59],[63,52,60,60],[64,10,61,16],[65,8,62,12],[66,8,63,12],[67,8,64,12],[67,13,64,17],[67,19,64,23,"listener"],[67,27,64,31],[67,31,64,35,"nativeListeners"],[67,46,64,50],[67,48,64,52],[68,10,65,16],[69,10,66,16],[69,14,66,20],[69,15,66,21,"removeListener"],[69,29,66,35],[69,30,66,36,"eventName"],[69,39,66,45],[69,41,66,47,"listener"],[69,49,66,55],[69,50,66,56],[70,8,67,12],[71,8,68,12],[72,8,69,12],[72,12,69,16],[72,13,69,17,"_nativeListeners"],[72,29,69,33],[72,30,69,34,"delete"],[72,36,69,40],[72,37,69,41,"eventName"],[72,46,69,50],[72,47,69,51],[73,6,70,8],[74,4,71,4],[75,4,72,4,"start"],[75,9,72,9,"start"],[75,10,72,10,"options"],[75,17,72,17],[75,19,72,19],[76,6,73,8],[76,12,73,14,"SpeechRecognitionClass"],[76,34,73,36],[76,37,73,39],[76,44,73,46,"webkitSpeechRecognition"],[76,67,73,69],[76,72,73,74],[76,83,73,85],[76,86,74,14,"webkitSpeechRecognition"],[76,109,74,37],[76,112,75,14,"SpeechRecognition"],[76,129,75,31],[77,6,76,8,"_speechRecognitionRef"],[77,27,76,29],[77,30,76,32],[77,34,76,36,"SpeechRecognitionClass"],[77,56,76,58],[77,57,76,59],[77,58,76,60],[78,6,77,8,"_speechRecognitionRef"],[78,27,77,29],[78,28,77,30,"lang"],[78,32,77,34],[78,35,77,37,"options"],[78,42,77,44],[78,43,77,45,"lang"],[78,47,77,49],[78,51,77,53],[78,58,77,60],[79,6,78,8,"_speechRecognitionRef"],[79,27,78,29],[79,28,78,30,"interimResults"],[79,42,78,44],[79,45,78,47,"options"],[79,52,78,54],[79,53,78,55,"interimResults"],[79,67,78,69],[79,71,78,73],[79,76,78,78],[80,6,79,8,"_speechRecognitionRef"],[80,27,79,29],[80,28,79,30,"maxAlternatives"],[80,43,79,45],[80,46,79,48,"options"],[80,53,79,55],[80,54,79,56,"maxAlternatives"],[80,69,79,71],[80,73,79,75],[80,74,79,76],[81,6,80,8,"_speechRecognitionRef"],[81,27,80,29],[81,28,80,30,"continuous"],[81,38,80,40],[81,41,80,43,"options"],[81,48,80,50],[81,49,80,51,"continuous"],[81,59,80,61],[81,63,80,65],[81,68,80,70],[82,6,81,8],[83,6,82,8],[84,6,83,8],[84,10,83,12],[84,11,83,13,"_nativeListeners"],[84,27,83,29],[84,28,83,30,"forEach"],[84,35,83,37],[84,36,83,38],[84,37,83,39,"listeners"],[84,46,83,48],[84,48,83,50,"eventName"],[84,57,83,59],[84,62,83,64],[85,8,84,12],[85,13,84,17],[85,19,84,23,"listener"],[85,27,84,31],[85,31,84,35,"listeners"],[85,40,84,44],[85,42,84,46],[86,10,85,16],[87,10,86,16,"_speechRecognitionRef"],[87,31,86,37],[87,33,86,39,"removeEventListener"],[87,52,86,58],[87,53,86,59,"eventName"],[87,62,86,68],[87,64,86,70,"listener"],[87,72,86,78],[87,73,86,79],[88,10,87,16,"_speechRecognitionRef"],[88,31,87,37],[88,33,87,39,"addEventListener"],[88,49,87,55],[88,50,87,56,"eventName"],[88,59,87,65],[88,61,87,67,"listener"],[88,69,87,75],[88,70,87,76],[89,8,88,12],[90,6,89,8],[90,7,89,9],[90,8,89,10],[91,6,90,8],[92,6,91,8,"_speechRecognitionRef"],[92,27,91,29],[92,28,91,30,"start"],[92,33,91,35],[92,34,91,36],[92,35,91,37],[93,4,92,4],[94,4,93,4,"getStateAsync"],[94,17,93,17,"getStateAsync"],[94,18,93,17],[94,20,93,20],[95,6,94,8,"console"],[95,13,94,15],[95,14,94,16,"warn"],[95,18,94,20],[95,19,94,21],[95,81,94,83],[95,82,94,84],[96,6,95,8],[96,13,95,15,"Promise"],[96,20,95,22],[96,21,95,23,"resolve"],[96,28,95,30],[96,29,95,31],[96,39,95,41],[96,40,95,42],[97,4,96,4],[98,4,97,4,"stop"],[98,8,97,8,"stop"],[98,9,97,8],[98,11,97,11],[99,6,98,8,"_speechRecognitionRef"],[99,27,98,29],[99,29,98,31,"stop"],[99,33,98,35],[99,34,98,36],[99,35,98,37],[100,4,99,4],[101,4,100,4,"abort"],[101,9,100,9,"abort"],[101,10,100,9],[101,12,100,12],[102,6,101,8,"_speechRecognitionRef"],[102,27,101,29],[102,29,101,31,"abort"],[102,34,101,36],[102,35,101,37],[102,36,101,38],[103,4,102,4],[104,4,103,4,"requestPermissionsAsync"],[104,27,103,27,"requestPermissionsAsync"],[104,28,103,27],[104,30,103,30],[105,6,104,8,"console"],[105,13,104,15],[105,14,104,16,"warn"],[105,18,104,20],[105,19,104,21],[105,110,104,112],[105,111,104,113],[106,6,105,8],[106,13,105,15,"Promise"],[106,20,105,22],[106,21,105,23,"resolve"],[106,28,105,30],[106,29,105,31],[107,8,106,12,"granted"],[107,15,106,19],[107,17,106,21],[107,21,106,25],[108,8,107,12,"canAskAgain"],[108,19,107,23],[108,21,107,25],[108,26,107,30],[109,8,108,12,"expires"],[109,15,108,19],[109,17,108,21],[109,24,108,28],[110,8,109,12,"status"],[110,14,109,18],[110,16,109,20],[111,6,110,8],[111,7,110,9],[111,8,110,10],[112,4,111,4],[113,4,112,4,"getPermissionsAsync"],[113,23,112,23,"getPermissionsAsync"],[113,24,112,23],[113,26,112,26],[114,6,113,8,"console"],[114,13,113,15],[114,14,113,16,"warn"],[114,18,113,20],[114,19,113,21],[114,106,113,108],[114,107,113,109],[115,6,114,8],[115,13,114,15,"Promise"],[115,20,114,22],[115,21,114,23,"resolve"],[115,28,114,30],[115,29,114,31],[116,8,115,12,"granted"],[116,15,115,19],[116,17,115,21],[116,21,115,25],[117,8,116,12,"canAskAgain"],[117,19,116,23],[117,21,116,25],[117,26,116,30],[118,8,117,12,"expires"],[118,15,117,19],[118,17,117,21],[118,24,117,28],[119,8,118,12,"status"],[119,14,118,18],[119,16,118,20],[120,6,119,8],[120,7,119,9],[120,8,119,10],[121,4,120,4],[122,4,121,4,"getMicrophonePermissionsAsync"],[122,33,121,33,"getMicrophonePermissionsAsync"],[122,34,121,33],[122,36,121,36],[123,6,122,8,"console"],[123,13,122,15],[123,14,122,16,"warn"],[123,18,122,20],[123,19,122,21],[123,116,122,118],[123,117,122,119],[124,6,123,8],[124,13,123,15,"Promise"],[124,20,123,22],[124,21,123,23,"resolve"],[124,28,123,30],[124,29,123,31],[125,8,124,12,"granted"],[125,15,124,19],[125,17,124,21],[125,21,124,25],[126,8,125,12,"canAskAgain"],[126,19,125,23],[126,21,125,25],[126,26,125,30],[127,8,126,12,"expires"],[127,15,126,19],[127,17,126,21],[127,24,126,28],[128,8,127,12,"status"],[128,14,127,18],[128,16,127,20],[129,6,128,8],[129,7,128,9],[129,8,128,10],[130,4,129,4],[131,4,130,4,"requestMicrophonePermissionsAsync"],[131,37,130,37,"requestMicrophonePermissionsAsync"],[131,38,130,37],[131,40,130,40],[132,6,131,8,"console"],[132,13,131,15],[132,14,131,16,"warn"],[132,18,131,20],[132,19,131,21],[132,120,131,122],[132,121,131,123],[133,6,132,8],[133,13,132,15,"Promise"],[133,20,132,22],[133,21,132,23,"resolve"],[133,28,132,30],[133,29,132,31],[134,8,133,12,"granted"],[134,15,133,19],[134,17,133,21],[134,21,133,25],[135,8,134,12,"canAskAgain"],[135,19,134,23],[135,21,134,25],[135,26,134,30],[136,8,135,12,"expires"],[136,15,135,19],[136,17,135,21],[136,24,135,28],[137,8,136,12,"status"],[137,14,136,18],[137,16,136,20],[138,6,137,8],[138,7,137,9],[138,8,137,10],[139,4,138,4],[140,4,139,4,"getSpeechRecognizerPermissionsAsync"],[140,39,139,39,"getSpeechRecognizerPermissionsAsync"],[140,40,139,39],[140,42,139,42],[141,6,140,8,"console"],[141,13,140,15],[141,14,140,16,"warn"],[141,18,140,20],[141,19,140,21],[141,122,140,124],[141,123,140,125],[142,6,141,8],[142,13,141,15,"Promise"],[142,20,141,22],[142,21,141,23,"resolve"],[142,28,141,30],[142,29,141,31],[143,8,142,12,"granted"],[143,15,142,19],[143,17,142,21],[143,21,142,25],[144,8,143,12,"canAskAgain"],[144,19,143,23],[144,21,143,25],[144,26,143,30],[145,8,144,12,"expires"],[145,15,144,19],[145,17,144,21],[145,24,144,28],[146,8,145,12,"status"],[146,14,145,18],[146,16,145,20],[147,6,146,8],[147,7,146,9],[147,8,146,10],[148,4,147,4],[149,4,148,4,"requestSpeechRecognizerPermissionsAsync"],[149,43,148,43,"requestSpeechRecognizerPermissionsAsync"],[149,44,148,43],[149,46,148,46],[150,6,149,8,"console"],[150,13,149,15],[150,14,149,16,"warn"],[150,18,149,20],[150,19,149,21],[150,126,149,128],[150,127,149,129],[151,6,150,8],[151,13,150,15,"Promise"],[151,20,150,22],[151,21,150,23,"resolve"],[151,28,150,30],[151,29,150,31],[152,8,151,12,"granted"],[152,15,151,19],[152,17,151,21],[152,21,151,25],[153,8,152,12,"canAskAgain"],[153,19,152,23],[153,21,152,25],[153,26,152,30],[154,8,153,12,"expires"],[154,15,153,19],[154,17,153,21],[154,24,153,28],[155,8,154,12,"status"],[155,14,154,18],[155,16,154,20],[156,6,155,8],[156,7,155,9],[156,8,155,10],[157,4,156,4],[158,4,157,4],[158,10,157,10,"getSupportedLocales"],[158,29,157,29,"getSupportedLocales"],[158,30,157,29],[158,32,157,32],[159,6,158,8,"console"],[159,13,158,15],[159,14,158,16,"warn"],[159,18,158,20],[159,19,158,21],[159,91,158,93],[159,92,158,94],[160,6,159,8],[160,13,159,15],[161,8,160,12,"locales"],[161,15,160,19],[161,17,160,21],[161,19,160,23],[162,8,161,12,"installedLocales"],[162,24,161,28],[162,26,161,30],[163,6,162,8],[163,7,162,9],[164,4,163,4],[165,4,164,4],[166,4,165,4],[167,4,166,4,"getSpeechRecognitionServices"],[167,32,166,32,"getSpeechRecognitionServices"],[167,33,166,32],[167,35,166,35],[168,6,167,8],[168,13,167,15],[168,15,167,17],[169,4,168,4],[170,4,169,4,"getDefaultRecognitionService"],[170,32,169,32,"getDefaultRecognitionService"],[170,33,169,32],[170,35,169,35],[171,6,170,8],[171,13,170,15],[172,8,171,12,"packageName"],[172,19,171,23],[172,21,171,25],[173,6,172,8],[173,7,172,9],[174,4,173,4],[175,4,174,4,"getAssistantService"],[175,23,174,23,"getAssistantService"],[175,24,174,23],[175,26,174,26],[176,6,175,8],[176,13,175,15],[177,8,176,12,"packageName"],[177,19,176,23],[177,21,176,25],[178,6,177,8],[178,7,177,9],[179,4,178,4],[180,4,179,4,"supportsOnDeviceRecognition"],[180,31,179,31,"supportsOnDeviceRecognition"],[180,32,179,31],[180,34,179,34],[181,6,180,8],[181,13,180,15],[181,18,180,20],[182,4,181,4],[183,4,182,4,"supportsRecording"],[183,21,182,21,"supportsRecording"],[183,22,182,21],[183,24,182,24],[184,6,183,8],[184,13,183,15],[184,18,183,20],[185,4,184,4],[186,4,185,4,"androidTriggerOfflineModelDownload"],[186,38,185,38,"androidTriggerOfflineModelDownload"],[186,39,185,38],[186,41,185,41],[187,6,186,8,"console"],[187,13,186,15],[187,14,186,16,"warn"],[187,18,186,20],[187,19,186,21],[187,97,186,99],[187,98,186,100],[188,6,187,8],[188,13,187,15,"Promise"],[188,20,187,22],[188,21,187,23,"resolve"],[188,28,187,30],[188,29,187,31],[189,8,188,12,"status"],[189,14,188,18],[189,16,188,20],[189,31,188,35],[190,8,189,12,"message"],[190,15,189,19],[190,17,189,21],[191,6,190,8],[191,7,190,9],[191,8,190,10],[192,4,191,4],[193,4,192,4,"setCategoryIOS"],[193,18,192,18,"setCategoryIOS"],[193,19,192,18],[193,21,192,21],[194,6,193,8,"console"],[194,13,193,15],[194,14,193,16,"warn"],[194,18,193,20],[194,19,193,21],[194,60,193,62],[194,61,193,63],[195,4,194,4],[196,4,195,4,"getAudioSessionCategoryAndOptionsIOS"],[196,40,195,40,"getAudioSessionCategoryAndOptionsIOS"],[196,41,195,40],[196,43,195,43],[197,6,196,8,"console"],[197,13,196,15],[197,14,196,16,"warn"],[197,18,196,20],[197,19,196,21],[197,82,196,84],[197,83,196,85],[198,6,197,8],[198,13,197,15],[199,8,198,12,"category"],[199,16,198,20],[199,18,198,22],[199,33,198,37],[200,8,199,12,"categoryOptions"],[200,23,199,27],[200,25,199,29],[200,26,199,30],[200,44,199,48],[200,46,199,50],[200,62,199,66],[200,63,199,67],[201,8,200,12,"mode"],[201,12,200,16],[201,14,200,18],[202,6,201,8],[202,7,201,9],[203,4,202,4],[204,4,203,4,"setAudioSessionActiveIOS"],[204,28,203,28,"setAudioSessionActiveIOS"],[204,29,203,28],[204,31,203,31],[205,6,204,8,"console"],[205,13,204,15],[205,14,204,16,"warn"],[205,18,204,20],[205,19,204,21],[205,70,204,72],[205,71,204,73],[206,4,205,4],[207,4,206,4,"isRecognitionAvailable"],[207,26,206,26,"isRecognitionAvailable"],[207,27,206,26],[207,29,206,29],[208,6,207,8],[208,12,207,14,"hasSpeechRecognitionAPI"],[208,35,207,37],[208,38,207,40],[208,45,207,47,"webkitSpeechRecognition"],[208,68,207,70],[208,73,207,75],[208,84,207,86],[208,88,208,12],[208,95,208,19,"SpeechRecognition"],[208,112,208,36],[208,117,208,41],[208,128,208,52],[209,6,209,8],[209,13,209,15,"hasSpeechRecognitionAPI"],[209,36,209,38],[210,4,210,4],[211,2,211,0],[212,2,212,0],[213,0,213,0],[214,0,214,0],[215,2,215,0],[215,8,215,6,"webToNativeEventMap"],[215,27,215,25],[215,30,215,28],[216,4,216,4,"audioend"],[216,12,216,12],[216,14,216,15,"ev"],[216,16,216,17],[216,21,216,23],[217,6,216,25,"uri"],[217,9,216,28],[217,11,216,30],[218,4,216,35],[218,5,216,36],[218,6,216,37],[219,4,217,4,"audiostart"],[219,14,217,14],[219,16,217,17,"ev"],[219,18,217,19],[219,23,217,25],[220,6,217,27,"uri"],[220,9,217,30],[220,11,217,32],[221,4,217,37],[221,5,217,38],[221,6,217,39],[222,4,218,4,"end"],[222,7,218,7],[222,9,218,10,"ev"],[222,11,218,12],[222,15,218,17],[222,19,218,21],[223,4,219,4,"error"],[223,9,219,9],[223,11,219,12,"ev"],[223,13,219,14],[223,18,219,20],[224,6,219,22,"error"],[224,11,219,27],[224,13,219,29,"ev"],[224,15,219,31],[224,16,219,32,"error"],[224,21,219,37],[225,6,219,39,"message"],[225,13,219,46],[225,15,219,48,"ev"],[225,17,219,50],[225,18,219,51,"message"],[226,4,219,59],[226,5,219,60],[226,6,219,61],[227,4,220,4,"nomatch"],[227,11,220,11],[227,13,220,14,"ev"],[227,15,220,16],[227,19,220,21],[227,23,220,25],[228,4,221,4,"result"],[228,10,221,10],[228,12,221,13,"ev"],[228,14,221,15],[228,18,221,20],[229,6,222,8],[229,12,222,14,"isFinal"],[229,19,222,21],[229,22,222,24,"Boolean"],[229,29,222,31],[229,30,222,32,"ev"],[229,32,222,34],[229,33,222,35,"results"],[229,40,222,42],[229,41,222,43,"ev"],[229,43,222,45],[229,44,222,46,"resultIndex"],[229,55,222,57],[229,56,222,58],[229,58,222,60,"isFinal"],[229,65,222,67],[229,66,222,68],[230,6,223,8],[230,10,223,12,"isFinal"],[230,17,223,19],[230,19,223,21],[231,8,224,12],[231,14,224,18,"results"],[231,21,224,25],[231,24,224,28],[231,26,224,30],[232,8,225,12],[232,13,225,17],[232,17,225,21,"i"],[232,18,225,22],[232,21,225,25],[232,22,225,26],[232,24,225,28,"i"],[232,25,225,29],[232,28,225,32,"ev"],[232,30,225,34],[232,31,225,35,"results"],[232,38,225,42],[232,39,225,43,"ev"],[232,41,225,45],[232,42,225,46,"resultIndex"],[232,53,225,57],[232,54,225,58],[232,55,225,59,"length"],[232,61,225,65],[232,63,225,67,"i"],[232,64,225,68],[232,66,225,70],[232,68,225,72],[233,10,226,16],[233,16,226,22,"result"],[233,22,226,28],[233,25,226,31,"ev"],[233,27,226,33],[233,28,226,34,"results"],[233,35,226,41],[233,36,226,42,"ev"],[233,38,226,44],[233,39,226,45,"resultIndex"],[233,50,226,56],[233,51,226,57],[233,52,226,58,"i"],[233,53,226,59],[233,54,226,60],[234,10,227,16,"results"],[234,17,227,23],[234,18,227,24,"push"],[234,22,227,28],[234,23,227,29],[235,12,228,20,"transcript"],[235,22,228,30],[235,24,228,32,"result"],[235,30,228,38],[235,31,228,39,"transcript"],[235,41,228,49],[236,12,229,20,"confidence"],[236,22,229,30],[236,24,229,32,"result"],[236,30,229,38],[236,31,229,39,"confidence"],[236,41,229,49],[237,12,230,20,"segments"],[237,20,230,28],[237,22,230,30],[238,10,231,16],[238,11,231,17],[238,12,231,18],[239,8,232,12],[240,8,233,12],[240,15,233,19],[241,10,234,16,"isFinal"],[241,17,234,23],[241,19,234,25],[241,23,234,29],[242,10,235,16,"results"],[243,8,236,12],[243,9,236,13],[244,6,237,8],[245,6,238,8],[246,6,239,8],[246,10,239,12,"transcript"],[246,20,239,22],[246,23,239,25],[246,25,239,27],[247,6,240,8],[247,12,240,14,"segments"],[247,20,240,22],[247,23,240,25],[247,25,240,27],[248,6,241,8],[248,11,241,13],[248,15,241,17,"i"],[248,16,241,18],[248,19,241,21,"ev"],[248,21,241,23],[248,22,241,24,"resultIndex"],[248,33,241,35],[248,35,241,37,"i"],[248,36,241,38],[248,39,241,41,"ev"],[248,41,241,43],[248,42,241,44,"results"],[248,49,241,51],[248,50,241,52,"length"],[248,56,241,58],[248,58,241,60,"i"],[248,59,241,61],[248,61,241,63],[248,63,241,65],[249,8,242,12],[249,14,242,18,"resultList"],[249,24,242,28],[249,27,242,31,"ev"],[249,29,242,33],[249,30,242,34,"results"],[249,37,242,41],[249,38,242,42,"i"],[249,39,242,43],[249,40,242,44],[250,8,243,12],[250,13,243,17],[250,17,243,21,"j"],[250,18,243,22],[250,21,243,25],[250,22,243,26],[250,24,243,28,"j"],[250,25,243,29],[250,28,243,32,"resultList"],[250,38,243,42],[250,39,243,43,"length"],[250,45,243,49],[250,47,243,51,"j"],[250,48,243,52],[250,50,243,54],[250,52,243,56],[251,10,244,16],[251,16,244,22,"result"],[251,22,244,28],[251,25,244,31,"resultList"],[251,35,244,41],[251,36,244,42,"j"],[251,37,244,43],[251,38,244,44],[252,10,245,16],[252,14,245,20],[252,15,245,21,"result"],[252,21,245,27],[252,23,245,29],[253,12,246,20],[254,10,247,16],[255,10,248,16,"segments"],[255,18,248,24],[255,19,248,25,"push"],[255,23,248,29],[255,24,248,30],[256,12,249,20,"confidence"],[256,22,249,30],[256,24,249,32,"result"],[256,30,249,38],[256,31,249,39,"confidence"],[256,41,249,49],[257,12,250,20,"segment"],[257,19,250,27],[257,21,250,29,"result"],[257,27,250,35],[257,28,250,36,"transcript"],[257,38,250,46],[258,12,251,20,"startTimeMillis"],[258,27,251,35],[258,29,251,37],[258,30,251,38],[259,12,252,20,"endTimeMillis"],[259,25,252,33],[259,27,252,35],[260,10,253,16],[260,11,253,17],[260,12,253,18],[261,10,254,16],[261,14,254,20],[261,15,254,21,"isFinal"],[261,22,254,28],[261,24,254,30],[262,12,255,20,"transcript"],[262,22,255,30],[262,26,255,34,"result"],[262,32,255,40],[262,33,255,41,"transcript"],[262,43,255,51],[263,10,256,16],[264,8,257,12],[265,6,258,8],[266,6,259,8],[266,13,259,15],[267,8,260,12,"isFinal"],[267,15,260,19],[267,17,260,21],[267,22,260,26],[268,8,261,12,"results"],[268,15,261,19],[268,17,261,21],[268,18,262,16],[269,10,263,20,"transcript"],[269,20,263,30],[270,10,264,20,"confidence"],[270,20,264,30],[270,22,264,32,"segments"],[270,30,264,40],[270,31,264,41,"reduce"],[270,37,264,47],[270,38,264,48],[270,39,264,49,"acc"],[270,42,264,52],[270,44,264,54,"curr"],[270,48,264,58],[270,53,264,63,"acc"],[270,56,264,66],[270,59,264,69,"curr"],[270,63,264,73],[270,64,264,74,"confidence"],[270,74,264,84],[270,76,264,86],[270,77,264,87],[270,78,264,88],[270,81,265,24,"segments"],[270,89,265,32],[270,90,265,33,"length"],[270,96,265,39],[271,10,266,20,"segments"],[272,8,267,16],[272,9,267,17],[273,6,269,8],[273,7,269,9],[274,4,270,4],[274,5,270,5],[275,4,271,4,"soundstart"],[275,14,271,14],[275,16,271,17,"ev"],[275,18,271,19],[275,22,271,24],[275,26,271,28],[276,4,272,4,"speechend"],[276,13,272,13],[276,15,272,16,"ev"],[276,17,272,18],[276,21,272,23],[276,25,272,27],[277,4,273,4,"speechstart"],[277,15,273,15],[277,17,273,18,"ev"],[277,19,273,20],[277,23,273,25],[277,27,273,29],[278,4,274,4,"start"],[278,9,274,9],[278,11,274,12,"ev"],[278,13,274,14],[278,17,274,19],[278,21,274,23],[279,4,275,4,"soundend"],[279,12,275,12],[279,14,275,15,"ev"],[279,16,275,17],[279,20,275,22],[280,2,276,0],[280,3,276,1],[281,2,277,7],[281,8,277,13,"ExpoSpeechRecognitionModule"],[281,35,277,40],[281,38,277,40,"exports"],[281,45,277,40],[281,46,277,40,"ExpoSpeechRecognitionModule"],[281,73,277,40],[281,76,277,43],[281,80,277,43,"registerWebModule"],[281,103,277,60],[281,105,277,61,"ExpoSpeechRecognitionModuleWeb"],[281,135,277,91],[281,137,277,93],[281,166,277,122],[281,167,277,123],[282,0,277,124],[282,3]],"functionMap":{"names":["<global>","ExpoSpeechRecognitionModuleWeb","ExpoSpeechRecognitionModuleWeb#bindEventListener","ExpoSpeechRecognitionModuleWeb#addListener","nativeListener","remove","ExpoSpeechRecognitionModuleWeb#removeAllListeners","ExpoSpeechRecognitionModuleWeb#start","_nativeListeners.forEach$argument_0","ExpoSpeechRecognitionModuleWeb#getStateAsync","ExpoSpeechRecognitionModuleWeb#stop","ExpoSpeechRecognitionModuleWeb#abort","ExpoSpeechRecognitionModuleWeb#requestPermissionsAsync","ExpoSpeechRecognitionModuleWeb#getPermissionsAsync","ExpoSpeechRecognitionModuleWeb#getMicrophonePermissionsAsync","ExpoSpeechRecognitionModuleWeb#requestMicrophonePermissionsAsync","ExpoSpeechRecognitionModuleWeb#getSpeechRecognizerPermissionsAsync","ExpoSpeechRecognitionModuleWeb#requestSpeechRecognizerPermissionsAsync","ExpoSpeechRecognitionModuleWeb#getSupportedLocales","ExpoSpeechRecognitionModuleWeb#getSpeechRecognitionServices","ExpoSpeechRecognitionModuleWeb#getDefaultRecognitionService","ExpoSpeechRecognitionModuleWeb#getAssistantService","ExpoSpeechRecognitionModuleWeb#supportsOnDeviceRecognition","ExpoSpeechRecognitionModuleWeb#supportsRecording","ExpoSpeechRecognitionModuleWeb#androidTriggerOfflineModelDownload","ExpoSpeechRecognitionModuleWeb#setCategoryIOS","ExpoSpeechRecognitionModuleWeb#getAudioSessionCategoryAndOptionsIOS","ExpoSpeechRecognitionModuleWeb#setAudioSessionActiveIOS","ExpoSpeechRecognitionModuleWeb#isRecognitionAvailable","webToNativeEventMap.audioend","webToNativeEventMap.audiostart","webToNativeEventMap.end","webToNativeEventMap.error","webToNativeEventMap.nomatch","webToNativeEventMap.result","segments.reduce$argument_0","webToNativeEventMap.soundstart","webToNativeEventMap.speechend","webToNativeEventMap.speechstart","webToNativeEventMap.start","webToNativeEventMap.soundend"],"mappings":"AAA;ACI;wBCI;KDK;IEC;+BCG;SDQ;oBEc;aFK;KFE;IKC;KLuB;IMC;sCCW;SDM;KNG;IQC;KRG;ISC;KTE;IUC;KVE;IWC;KXQ;IYC;KZQ;IaC;KbQ;IcC;KdQ;IeC;KfQ;IgBC;KhBQ;IiBC;KjBM;IkBG;KlBE;ImBC;KnBI;IoBC;KpBI;IqBC;KrBE;IsBC;KtBE;IuBC;KvBM;IwBC;KxBE;IyBC;KzBO;I0BC;K1BE;I2BC;K3BI;CDC;c6BK,uB7B;gB8BC,uB9B;S+BC,Y/B;WgCC,kDhC;aiCC,YjC;YkCC;gDC2C,oCD;KlCM;gBoCC,YpC;eqCC,YrC;iBsCC,YtC;WuCC,YvC;cwCC,YxC"}},"type":"js/module"}]}